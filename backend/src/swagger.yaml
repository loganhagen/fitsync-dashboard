openapi: 3.0.0
info:
  title: Fitness Dashboard API
  version: 1.0.0
  description: API for fitness data
paths:
  /sleep:
    get:
      summary: Get all sleep logs.
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
  /users:
    get:
      summary: Get all users in the database.
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
  /users/demo:
    get:
      summary: Get the demo user.
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
  /users/{email}:
    get:
      summary: Get a user by email.
      parameters:
        - name: email
          in: path
          required: true
          description: Email address of the user.
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
  /users/{userId}/sleep:
    get:
      summary: Get all sleep logs for a specified user.
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID.
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
  /users/{userId}/sleep/{date}:
    get:
      summary: Get a sleep log for a specific user based on a date.
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID.
          schema:
            type: string
        - name: date
          in: path
          required: true
          description: The date of the log.
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
  /users/{userId}/sleep/recent:
    get:
      summary: Get the most recent sleep log for the user.
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID.
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
  /users/{userId}/temperature:
    get:
      summary: Get all skin temperature logs for a specified user.
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID.
          schema:
            type: string
      responses:
        "200":
          description: A successful response with the user's skin temperature logs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "c1f7a4a9-8f0c-4a3d-9c3a-3e7b1d9c1b3a"
                        dateTime:
                          type: string
                          format: date-time
                          example: "2025-08-30T04:00:00.000Z"
                        nightlyRelative:
                          type: number
                          format: float
                          example: 1.2
                        logType:
                          type: string
                          enum: [DEDICATED_TRACKER, OTHER]
                          example: DEDICATED_TRACKER
        "400":
          description: Bad Request. User ID is missing or invalid.
        "500":
          description: Internal Server Error.
